###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        23/May/2015  14:22:58
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\app\myfirst.c
#    Command line =  
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\app\myfirst.c
#        -D LPLD_K60 -D USE_K60F15 -lCN
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\RAM\List\
#        -lB
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\RAM\List\
#        -o
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\RAM\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4F -e --fpu=VFPv4_sp --dlib_config
#        D:\tools\IAR\iar7_3\arm\INC\c\DLib_Config_Normal.h -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\app\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\CPU\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\common\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\LPLD\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\FatFs\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\USB\common\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\..\..\..\lib\USB\class\
#        -On -I D:\tools\IAR\iar7_3\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\RAM\List\myfirst.lst
#    Object file  =  
#        D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\iar\RAM\Obj\myfirst.o
#
###############################################################################

D:\tools\IAR\lapulande\%5B拉普兰德K60固件库%5DLPLD_OSKinetis_V3.10\LPLD_OSKinetis_V3\project\myfirst\app\myfirst.c
      1          /**
      2           * --------------基于"拉普兰德K60底层库V3"的工程（myfirst）-----------------
      3           * @file myfirst.c
      4           * @version 0.0
      5           * @date 2013-9-29
      6           * @brief 关于该工程的描述
      7           *
      8           * 版权所有:北京拉普兰德电子技术有限公司
      9           * http://www.lpld.cn
     10           * mail:support@lpld.cn
     11           * 硬件平台:  LPLD K60 Card / LPLD K60 Nano
     12           *
     13           * 本工程基于"拉普兰德K60底层库V3"开发，
     14           * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
     15           * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     16           * 底层库使用方法见相关文档。 
     17           *
     18           */
     19          #include "common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable8  ;; 0xe000e100
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return
     20          #include "arm_math.h"
     21          #include "arm_const_structs.h"
     22          

   \                                 In section .bss, align 4
     23          ADC_InitTypeDef adc0_init_struct;
   \                     adc0_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     24          DMA_InitTypeDef dma_init_struct;
   \                     dma_init_struct:
   \   00000000                      DS8 44

   \                                 In section .bss, align 4
     25          DMA_InitTypeDef dma2_init_struct;
   \                     dma2_init_struct:
   \   00000000                      DS8 44

   \                                 In section .bss, align 4
     26          PDB_InitTypeDef pdb_init_struct;
   \                     pdb_init_struct:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
     27          PIT_InitTypeDef pit0_init_struct;
   \                     pit0_init_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     28          DAC_InitTypeDef dac0_init_struct;
   \                     dac0_init_struct:
   \   00000000                      DS8 28
     29          
     30          #define LENGTH 1024
     31          
     32          /* ------------------------------------------------------------------
     33          * Global variables for FFT Bin Example
     34          * ------------------------------------------------------------------- */

   \                                 In section .data, align 4
     35          uint32_t fftSize = 1024;
   \                     fftSize:
   \   00000000   0x00000400         DC32 1024

   \                                 In section .bss, align 4
     36          uint32_t ifftFlag = 0;
   \                     ifftFlag:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     37          uint32_t doBitReverse = 1;
   \                     doBitReverse:
   \   00000000   0x00000001         DC32 1
     38          

   \                                 In section .bss, align 4
     39          uint16 Result_A[LENGTH+1]={{0}};
   \                     Result_A:
   \   00000000                      DS8 2052

   \                                 In section .data, align 4
     40          uint16 Result_B[LENGTH+1]={{1000},{1000},{1000}};
   \                     Result_B:
   \   00000000   0x03E8 0x03E8      DC16 1000, 1000, 1000
   \              0x03E8       
   \   00000006   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000026   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000036   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000046   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000056   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000066   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000076   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000086   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000096   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000106   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000116   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000126   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000136   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000146   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000156   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000166   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000176   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000186   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000196   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000206   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000216   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000226   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000236   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000246   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000256   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000266   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000276   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000286   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000296   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000002F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000306   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000316   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000326   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000336   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000346   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000356   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000366   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000376   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000386   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000396   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000406   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000416   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000426   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000436   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000446   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000456   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000466   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000476   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000486   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000496   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000004F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000506   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000516   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000526   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000536   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000546   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000556   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000566   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000576   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000586   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000596   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000606   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000616   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000626   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000636   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000646   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000656   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000666   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000676   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000686   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000696   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000006F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000706   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000716   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000726   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000736   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000746   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000756   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000766   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000776   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000786   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000796   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007B6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007D6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007E6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000007F6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     41          

   \                                 In section .bss, align 4
     42          float Out_C[LENGTH/2];
   \                     Out_C:
   \   00000000                      DS8 2048

   \                                 In section .bss, align 4
     43          float MaxValue;
   \                     MaxValue:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     44          uint32 MaxValueIndex;
   \                     MaxValueIndex:
   \   00000000                      DS8 4
     45          

   \                                 In section .bss, align 2
     46          uint16 Result_flag = 0;
   \                     Result_flag:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
     47          void dmaisr()
     48          {
     49             Result_flag = !Result_flag;
   \                     dmaisr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable8_1
   \   00000002   0x8800             LDRH     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD101             BNE.N    ??dmaisr_0
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xE000             B.N      ??dmaisr_1
   \                     ??dmaisr_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??dmaisr_1: (+1)
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x....             LDR.N    R1,??DataTable8_1
   \   00000012   0x8008             STRH     R0,[R1, #+0]
     50            if(!Result_flag)
   \   00000014   0x....             LDR.N    R0,??DataTable8_1
   \   00000016   0x8800             LDRH     R0,[R0, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD103             BNE.N    ??dmaisr_2
     51            {
     52              LPLD_DMA_LoadDstAddr(DMA_CH15,(uint32)&Result_B);
   \   0000001C   0x....             LDR.N    R0,??DataTable8_2
   \   0000001E   0x....             LDR.N    R1,??DataTable8_3  ;; 0x400091f0
   \   00000020   0x6008             STR      R0,[R1, #+0]
   \   00000022   0xE002             B.N      ??dmaisr_3
     53              
     54            }else
     55            {
     56              LPLD_DMA_LoadDstAddr(DMA_CH15,(uint32)&Result_A);
   \                     ??dmaisr_2: (+1)
   \   00000024   0x....             LDR.N    R0,??DataTable8_4
   \   00000026   0x....             LDR.N    R1,??DataTable8_3  ;; 0x400091f0
   \   00000028   0x6008             STR      R0,[R1, #+0]
     57            }
     58          
     59          }
   \                     ??dmaisr_3: (+1)
   \   0000002A   0x4770             BX       LR               ;; return
     60          
     61          
     62          

   \                                 In section .data, align 2
     63          uint16  flag = LENGTH - 50;
   \                     flag:
   \   00000000   0x03CE             DC16 974

   \                                 In section .data, align 2
     64          uint16 bufflag = 1;
   \                     bufflag:
   \   00000000   0x0001             DC16 1

   \                                 In section .text, align 2, keep-with-next
     65          void pitdacisr()
     66          {
   \                     pitdacisr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     67            if(!bufflag)
   \   00000002   0x....             LDR.N    R0,??DataTable8_5
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD10C             BNE.N    ??pitdacisr_0
     68            {
     69              LPLD_DAC_SetBufferDataN(DAC0, Result_B[flag], 1);
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x....             LDR.N    R0,??DataTable8_2
   \   0000000E   0x....             LDR.N    R1,??DataTable8_6
   \   00000010   0x8809             LDRH     R1,[R1, #+0]
   \   00000012   0xF830 0x1011      LDRH     R1,[R0, R1, LSL #+1]
   \   00000016   0x....             LDR.N    R0,??DataTable8_7  ;; 0x400cc000
   \   00000018   0x.... 0x....      BL       LPLD_DAC_SetBufferDataN
     70              LPLD_DAC_SoftwareTrigger(DAC0);
   \   0000001C   0x....             LDR.N    R0,??DataTable8_7  ;; 0x400cc000
   \   0000001E   0x.... 0x....      BL       LPLD_DAC_SoftwareTrigger
   \   00000022   0xE00B             B.N      ??pitdacisr_1
     71            }
     72            else
     73            {
     74                LPLD_DAC_SetBufferDataN(DAC0, Result_A[flag], 1);
   \                     ??pitdacisr_0: (+1)
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x....             LDR.N    R0,??DataTable8_4
   \   00000028   0x....             LDR.N    R1,??DataTable8_6
   \   0000002A   0x8809             LDRH     R1,[R1, #+0]
   \   0000002C   0xF830 0x1011      LDRH     R1,[R0, R1, LSL #+1]
   \   00000030   0x....             LDR.N    R0,??DataTable8_7  ;; 0x400cc000
   \   00000032   0x.... 0x....      BL       LPLD_DAC_SetBufferDataN
     75                LPLD_DAC_SoftwareTrigger(DAC0);
   \   00000036   0x....             LDR.N    R0,??DataTable8_7  ;; 0x400cc000
   \   00000038   0x.... 0x....      BL       LPLD_DAC_SoftwareTrigger
     76            }
     77            
     78            if(++flag==LENGTH)
   \                     ??pitdacisr_1: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable8_6
   \   0000003E   0x8800             LDRH     R0,[R0, #+0]
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \   00000042   0x....             LDR.N    R1,??DataTable8_6
   \   00000044   0x8008             STRH     R0,[R1, #+0]
   \   00000046   0x....             LDR.N    R0,??DataTable8_6
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000004E   0xD10C             BNE.N    ??pitdacisr_2
     79            {
     80              flag = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR.N    R1,??DataTable8_6
   \   00000054   0x8008             STRH     R0,[R1, #+0]
     81              bufflag = !bufflag;
   \   00000056   0x....             LDR.N    R0,??DataTable8_5
   \   00000058   0x8800             LDRH     R0,[R0, #+0]
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD101             BNE.N    ??pitdacisr_3
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0xE000             B.N      ??pitdacisr_4
   \                     ??pitdacisr_3: (+1)
   \   00000062   0x2000             MOVS     R0,#+0
   \                     ??pitdacisr_4: (+1)
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x....             LDR.N    R1,??DataTable8_5
   \   00000068   0x8008             STRH     R0,[R1, #+0]
     82            }
     83          }
   \                     ??pitdacisr_2: (+1)
   \   0000006A   0xBD01             POP      {R0,PC}          ;; return
     84          

   \                                 In section .text, align 2, keep-with-next
     85          void init_ADC()
     86          {
   \                     init_ADC: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     87            adc0_init_struct.ADC_Adcx = ADC0;     //选择ADC0
   \   00000002   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4003b000
   \   00000004   0x....             LDR.N    R1,??DataTable8_9
   \   00000006   0x6008             STR      R0,[R1, #+0]
     88            adc0_init_struct.ADC_BitMode = SE_12BIT;      //配置转换精度
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable8_9
   \   0000000C   0x7148             STRB     R0,[R1, #+5]
     89            adc0_init_struct.ADC_CalEnable = TRUE;        //使能初始化自动校准
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable8_9
   \   00000012   0x72C8             STRB     R0,[R1, #+11]
     90            adc0_init_struct.ADC_HwTrgCfg = HW_TRGA;      //配置为硬件触发转换
   \   00000014   0x2040             MOVS     R0,#+64
   \   00000016   0x....             LDR.N    R1,??DataTable8_9
   \   00000018   0x7308             STRB     R0,[R1, #+12]
     91            adc0_init_struct.ADC_DmaEnable = TRUE;        //使能DMA
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable8_9
   \   0000001E   0x7348             STRB     R0,[R1, #+13]
     92            //初始化ADC0
     93            LPLD_ADC_Init(adc0_init_struct);   
   \   00000020   0x....             LDR.N    R1,??DataTable8_9
   \   00000022   0xB084             SUB      SP,SP,#+16
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x2214             MOVS     R2,#+20
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002C   0xBC0F             POP      {R0-R3}
   \   0000002E   0x.... 0x....      BL       LPLD_ADC_Init
     94            //使能ADC0的AD8输入引脚复用功能
     95            LPLD_ADC_Chn_Enable(ADC0, AD8);
   \   00000032   0x2108             MOVS     R1,#+8
   \   00000034   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4003b000
   \   00000036   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     96            //使能ADC0的AD8输入通道、禁用转换完成中断
     97            LPLD_ADC_EnableConversion(ADC0, AD8, 0, FALSE);               //使能PTB0通道
   \   0000003A   0x2300             MOVS     R3,#+0
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2108             MOVS     R1,#+8
   \   00000040   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4003b000
   \   00000042   0x.... 0x....      BL       LPLD_ADC_EnableConversion
     98            
     99            adc0_init_struct.ADC_Adcx = ADC1;
   \   00000046   0x....             LDR.N    R0,??DataTable8_10  ;; 0x400bb000
   \   00000048   0x....             LDR.N    R1,??DataTable8_9
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    100              LPLD_ADC_Init(adc0_init_struct);   
   \   0000004C   0x....             LDR.N    R1,??DataTable8_9
   \   0000004E   0xB084             SUB      SP,SP,#+16
   \   00000050   0x4668             MOV      R0,SP
   \   00000052   0x2214             MOVS     R2,#+20
   \   00000054   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000058   0xBC0F             POP      {R0-R3}
   \   0000005A   0x.... 0x....      BL       LPLD_ADC_Init
    101            //使能ADC0的AD8输入引脚复用功能
    102            LPLD_ADC_Chn_Enable(ADC0, AD8);
   \   0000005E   0x2108             MOVS     R1,#+8
   \   00000060   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4003b000
   \   00000062   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
    103            //使能ADC0的AD8输入通道、禁用转换完成中断
    104            LPLD_ADC_EnableConversion(ADC1, AD8, 0, FALSE);               //使能PTB0通道
   \   00000066   0x2300             MOVS     R3,#+0
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2108             MOVS     R1,#+8
   \   0000006C   0x....             LDR.N    R0,??DataTable8_10  ;; 0x400bb000
   \   0000006E   0x.... 0x....      BL       LPLD_ADC_EnableConversion
    105            
    106          }
   \   00000072   0xBD01             POP      {R0,PC}          ;; return
    107          

   \                                 In section .text, align 2, keep-with-next
    108          void init_DMA()
    109          {
   \                     init_DMA: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    110            /*ADC_DMA*/
    111            dma_init_struct.DMA_CHx = DMA_CH15;   //使用Ch15通道
   \   00000004   0x200F             MOVS     R0,#+15
   \   00000006   0x....             LDR.N    R1,??DataTable8_11
   \   00000008   0x7008             STRB     R0,[R1, #+0]
    112            dma_init_struct.DMA_Req = ADC0_DMAREQ;        //DMA请求源为ADC0
   \   0000000A   0x2028             MOVS     R0,#+40
   \   0000000C   0x....             LDR.N    R1,??DataTable8_11
   \   0000000E   0x7048             STRB     R0,[R1, #+1]
    113            dma_init_struct.DMA_PeriodicTriggerEnable = TRUE;      //周期触发
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable8_11
   \   00000014   0x7088             STRB     R0,[R1, #+2]
    114            dma_init_struct.DMA_MajorLoopCnt = LENGTH;        //主循环计数滤波数组长度次
   \   00000016   0xF44F 0x6080      MOV      R0,#+1024
   \   0000001A   0x....             LDR.N    R1,??DataTable8_11
   \   0000001C   0x8088             STRH     R0,[R1, #+4]
    115            dma_init_struct.DMA_MinorByteCnt = 2; //次循环传输字节计数（由于ADC采样为12位，因此传输2字节）
   \   0000001E   0x2002             MOVS     R0,#+2
   \   00000020   0x....             LDR.N    R1,??DataTable8_11
   \   00000022   0x6088             STR      R0,[R1, #+8]
    116            dma_init_struct.DMA_SourceAddr = (uint32)&(ADC0->R[0]);       //源地址：ADC0结果寄存器A地址
   \   00000024   0x....             LDR.N    R0,??DataTable8_12  ;; 0x4003b010
   \   00000026   0x....             LDR.N    R1,??DataTable8_11
   \   00000028   0x60C8             STR      R0,[R1, #+12]
    117            dma_init_struct.DMA_SourceDataSize = DMA_SRC_16BIT;   //源地址传输数据宽度16位
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x....             LDR.N    R1,??DataTable8_11
   \   0000002E   0x7408             STRB     R0,[R1, #+16]
    118            dma_init_struct.DMA_DestAddr = (uint32)&Result_A;       //目的地址
   \   00000030   0x....             LDR.N    R0,??DataTable8_4
   \   00000032   0x....             LDR.N    R1,??DataTable8_11
   \   00000034   0x6188             STR      R0,[R1, #+24]
    119            dma_init_struct.DMA_DestDataSize = DMA_DST_16BIT;     //目的地址传输数据宽度16位
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable8_11
   \   0000003A   0x7708             STRB     R0,[R1, #+28]
    120            dma_init_struct.DMA_AutoDisableReq = FALSE;   //禁用自动禁用请求，即不受主循环计数计数限制
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR.N    R1,??DataTable8_11
   \   00000040   0xF881 0x0024      STRB     R0,[R1, #+36]
    121            dma_init_struct.DMA_MajorCompleteIntEnable = TRUE;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x....             LDR.N    R1,??DataTable8_11
   \   00000048   0xF881 0x0025      STRB     R0,[R1, #+37]
    122            dma_init_struct.DMA_Isr = dmaisr;
   \   0000004C   0x....             LDR.N    R0,??DataTable8_13
   \   0000004E   0x....             LDR.N    R1,??DataTable8_11
   \   00000050   0x6288             STR      R0,[R1, #+40]
    123            dma_init_struct.DMA_DestAddrOffset = 2;       //目的地址偏移：每次读入增加2
   \   00000052   0x2002             MOVS     R0,#+2
   \   00000054   0x....             LDR.N    R1,??DataTable8_11
   \   00000056   0x83C8             STRH     R0,[R1, #+30]
    124            //dma_init_struct.DMA_LastDestAddrAdj = -(2*LENGTH);
    125            //初始化DMA
    126            LPLD_DMA_Init(dma_init_struct);
   \   00000058   0x....             LDR.N    R1,??DataTable8_11
   \   0000005A   0xB084             SUB      SP,SP,#+16
   \   0000005C   0x4668             MOV      R0,SP
   \   0000005E   0x222C             MOVS     R2,#+44
   \   00000060   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000064   0xBC0F             POP      {R0-R3}
   \   00000066   0x.... 0x....      BL       LPLD_DMA_Init
    127            //使能DMA请求
    128            LPLD_DMA_EnableReq(DMA_CH15); 
   \   0000006A   0x....             LDR.N    R0,??DataTable8_14  ;; 0x4000800c
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000072   0x....             LDR.N    R1,??DataTable8_14  ;; 0x4000800c
   \   00000074   0x6008             STR      R0,[R1, #+0]
    129            LPLD_DMA_EnableIrq(dma_init_struct);
   \   00000076   0x....             LDR.N    R1,??DataTable8_11
   \   00000078   0xB084             SUB      SP,SP,#+16
   \   0000007A   0x4668             MOV      R0,SP
   \   0000007C   0x222C             MOVS     R2,#+44
   \   0000007E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000082   0xBC0F             POP      {R0-R3}
   \   00000084   0x.... 0x....      BL       LPLD_DMA_EnableIrq
    130            
    131          //  /*DAC_DMA*/
    132          //  dma2_init_struct.DMA_CHx = DMA_CH16;   //使用Ch15通道
    133          //  dma2_init_struct.DMA_Req = ADC1_DMAREQ;        //DMA请求源为DAC0
    134          //  dma2_init_struct.DMA_PeriodicTriggerEnable = TRUE;      //周期触发
    135          //  dma2_init_struct.DMA_MajorLoopCnt = LENGTH;        //主循环计数滤波数组长度次
    136          //  dma2_init_struct.DMA_MinorByteCnt = 2; //次循环传输字节计数（由于ADC采样为12位，因此传输2字节）
    137          //  dma2_init_struct.DMA_SourceAddr = (uint32)&Result_B;       //源地址：
    138          //  dma2_init_struct.DMA_SourceDataSize = DMA_SRC_16BIT;   //源地址传输数据宽度16位
    139          //  dma2_init_struct.DMA_SourceAddrOffset = 2;
    140          //  dma2_init_struct.DMA_LastSourceAddrAdj = -(2*LENGTH);
    141          //  dma2_init_struct.DMA_DestAddr = (uint32)&(DAC0->DAT[0].DATL);       //目的地址
    142          //  dma2_init_struct.DMA_DestDataSize = DMA_DST_16BIT;     //目的地址传输数据宽度16位
    143          //  //dma2_init_struct.DMA_DestAddrOffset = 2; 
    144          //  dma2_init_struct.DMA_MajorCompleteIntEnable = TRUE;
    145          //  dma2_init_struct.DMA_Isr = dma2isr;
    146          //  dma2_init_struct.DMA_AutoDisableReq = FALSE;   //禁用自动禁用请求，即不受主循环计数计数限制
    147          // // dma2_init_struct.DMA_LastDestAddrAdj = -(2*LENGTH);
    148          //  LPLD_DMA_Init(dma2_init_struct);
    149          //  //使能DMA请求
    150          //  LPLD_DMA_EnableReq(DMA_CH16); 
    151          //  LPLD_DMA_EnableIrq(dma2_init_struct);
    152            
    153          }
   \   00000088   0xB007             ADD      SP,SP,#+28
   \   0000008A   0xBD00             POP      {PC}             ;; return
    154          
    155          

   \                                 In section .text, align 2, keep-with-next
    156          void init_DAC()
    157          {
   \                     init_DAC: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    158            dac0_init_struct.DAC_Dacx = DAC0;
   \   00000002   0x....             LDR.N    R0,??DataTable8_7  ;; 0x400cc000
   \   00000004   0x....             LDR.N    R1,??DataTable8_15
   \   00000006   0x6008             STR      R0,[R1, #+0]
    159            
    160            LPLD_DAC_Init(dac0_init_struct);
   \   00000008   0x....             LDR.N    R1,??DataTable8_15
   \   0000000A   0xB084             SUB      SP,SP,#+16
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x221C             MOVS     R2,#+28
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000014   0xBC0F             POP      {R0-R3}
   \   00000016   0x.... 0x....      BL       LPLD_DAC_Init
    161            
    162          }
   \   0000001A   0xBD07             POP      {R0-R2,PC}       ;; return
    163          

   \                                 In section .text, align 2, keep-with-next
    164          void init_PDB()
    165          {
   \                     init_PDB: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    166            pdb_init_struct.PDB_CounterPeriodMs = 1000;
   \   00000004   0xF44F 0x707A      MOV      R0,#+1000
   \   00000008   0x....             LDR.N    R1,??DataTable8_16
   \   0000000A   0x6048             STR      R0,[R1, #+4]
    167            pdb_init_struct.PDB_ContinuousModeEnable = FALSE;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable8_16
   \   00000010   0x7388             STRB     R0,[R1, #+14]
    168            pdb_init_struct.PDB_LoadModeSel = LOADMODE_0; //加载模式设置
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable8_16
   \   00000016   0x7308             STRB     R0,[R1, #+12]
    169            pdb_init_struct.PDB_TriggerInputSourceSel =  TRIGGER_PIT0;
   \   00000018   0x2004             MOVS     R0,#+4
   \   0000001A   0x....             LDR.N    R1,??DataTable8_16
   \   0000001C   0x7348             STRB     R0,[R1, #+13]
    170            
    171            LPLD_PDB_Init(pdb_init_struct);
   \   0000001E   0x....             LDR.N    R1,??DataTable8_16
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2228             MOVS     R2,#+40
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_PDB_Init
    172            LPLD_PDB_AdcTriggerCfg(ADC0, PRETRIG_EN_A, 0);
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4003b000
   \   00000036   0x.... 0x....      BL       LPLD_PDB_AdcTriggerCfg
    173           // LPLD_PDB_AdcTriggerCfg(ADC1, PRETRIG_EN_A, 0);
    174            LPLD_PDB_EnableIrq();
   \   0000003A   0x2048             MOVS     R0,#+72
   \   0000003C   0x.... 0x....      BL       NVIC_EnableIRQ
    175            //LPLD_PDB_SoftwareTrigger();
    176             
    177          }
   \   00000040   0xB007             ADD      SP,SP,#+28
   \   00000042   0xBD00             POP      {PC}             ;; return
    178          

   \                                 In section .text, align 2, keep-with-next
    179          void init_PIT()
    180          {
   \                     init_PIT: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    181            pit0_init_struct.PIT_Pitx = PIT0;     //选择PIT0
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR.N    R1,??DataTable8_17
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    182            pit0_init_struct.PIT_PeriodUs = 15;  //PIT0计数周期500ms
   \   00000008   0x200F             MOVS     R0,#+15
   \   0000000A   0x....             LDR.N    R1,??DataTable8_17
   \   0000000C   0x6048             STR      R0,[R1, #+4]
    183            pit0_init_struct.PIT_Isr = pitdacisr;
   \   0000000E   0x....             LDR.N    R0,??DataTable8_18
   \   00000010   0x....             LDR.N    R1,??DataTable8_17
   \   00000012   0x6108             STR      R0,[R1, #+16]
    184            //初始化PIT0
    185            LPLD_PIT_Init(pit0_init_struct); 
   \   00000014   0x....             LDR.N    R1,??DataTable8_17
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x2214             MOVS     R2,#+20
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_PIT_Init
    186            LPLD_PIT_EnableIrq(pit0_init_struct);
   \   00000026   0x....             LDR.N    R1,??DataTable8_17
   \   00000028   0xB084             SUB      SP,SP,#+16
   \   0000002A   0x4668             MOV      R0,SP
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000032   0xBC0F             POP      {R0-R3}
   \   00000034   0x.... 0x....      BL       LPLD_PIT_EnableIrq
    187          }
   \   00000038   0xBD01             POP      {R0,PC}          ;; return
    188          
    189          

   \                                 In section .text, align 2, keep-with-next
    190          void main (void)
    191          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    192            /*开硬件浮点*/
    193            SCB->CPACR |=((3UL << 10*2)|(3UL << 11*2));     /* set CP10 and CP11 Full Access */
   \   00000002   0x....             LDR.N    R0,??DataTable8_19  ;; 0xe000ed88
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x0070      ORRS     R0,R0,#0xF00000
   \   0000000A   0x....             LDR.N    R1,??DataTable8_19  ;; 0xe000ed88
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    194            
    195            init_ADC();
   \   0000000E   0x.... 0x....      BL       init_ADC
    196            init_DAC();
   \   00000012   0x.... 0x....      BL       init_DAC
    197            init_DMA();
   \   00000016   0x.... 0x....      BL       init_DMA
    198            init_PDB();
   \   0000001A   0x.... 0x....      BL       init_PDB
    199            init_PIT();
   \   0000001E   0x.... 0x....      BL       init_PIT
    200          
    201            while(1)
   \                     ??main_0: (+1)
   \   00000022   0xE7FE             B.N      ??main_0
    202            {
    203          //    if(Result_flag)
    204          //    {
    205          //  /* Process the data through the CFFT/CIFFT module */
    206          //  arm_cfft_f32(&arm_cfft_sR_f32_len1024, (float*)Result_A, ifftFlag, doBitReverse);
    207          //
    208          //  /* Process the data through the Complex Magnitude Module for
    209          //  calculating the magnitude at each bin */
    210          //  arm_cmplx_mag_f32((float*)Result_A, Out_C, fftSize);
    211          //
    212          //  /* Calculates maxValue and returns corresponding BIN value */
    213          //  arm_max_f32(Out_C, fftSize, &MaxValue, &MaxValueIndex);
    214          //    }
    215          //    else
    216          //    {
    217          //        /* Process the data through the CFFT/CIFFT module */
    218          //  arm_cfft_f32(&arm_cfft_sR_f32_len1024, (float*)Result_B, ifftFlag, doBitReverse);
    219          //
    220          //  /* Process the data through the Complex Magnitude Module for
    221          //  calculating the magnitude at each bin */
    222          //  arm_cmplx_mag_f32((float*)Result_B, Out_C, fftSize);
    223          //
    224          //  /* Calculates maxValue and returns corresponding BIN value */
    225          //  arm_max_f32(Out_C, fftSize, &MaxValue, &MaxValueIndex);
    226          //    }
    227            } 
    228          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     Result_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     Result_B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x400091F0         DC32     0x400091f0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     Result_A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     bufflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x400CC000         DC32     0x400cc000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     adc0_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     dma_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x4003B010         DC32     0x4003b010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     dmaisr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     dac0_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     pdb_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     pit0_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     pitdacisr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0xE000ED88         DC32     0xe000ed88
    229          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_EnableIRQ
       0   dmaisr
      24   init_ADC
         8   -> LPLD_ADC_Chn_Enable
         8   -> LPLD_ADC_EnableConversion
         8   -> LPLD_ADC_Init
        24   -> __aeabi_memcpy4
      32   init_DAC
        16   -> LPLD_DAC_Init
        32   -> __aeabi_memcpy4
      48   init_DMA
        32   -> LPLD_DMA_EnableIrq
        32   -> LPLD_DMA_Init
        48   -> __aeabi_memcpy4
      48   init_PDB
        32   -> LPLD_PDB_AdcTriggerCfg
        32   -> LPLD_PDB_Init
        32   -> NVIC_EnableIRQ
        48   -> __aeabi_memcpy4
      24   init_PIT
         8   -> LPLD_PIT_EnableIrq
         8   -> LPLD_PIT_Init
        24   -> __aeabi_memcpy4
       8   main
         8   -> init_ADC
         8   -> init_DAC
         8   -> init_DMA
         8   -> init_PDB
         8   -> init_PIT
       8   pitdacisr
         8   -> LPLD_DAC_SetBufferDataN
         8   -> LPLD_DAC_SoftwareTrigger


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       4  MaxValue
       4  MaxValueIndex
      20  NVIC_EnableIRQ
    2048  Out_C
    2052  Result_A
    2052  Result_B
       2  Result_flag
      20  adc0_init_struct
       2  bufflag
      28  dac0_init_struct
      44  dma2_init_struct
      44  dma_init_struct
      44  dmaisr
       4  doBitReverse
       4  fftSize
       2  flag
       4  ifftFlag
     116  init_ADC
      28  init_DAC
     140  init_DMA
      68  init_PDB
      58  init_PIT
      36  main
      40  pdb_init_struct
      20  pit0_init_struct
     108  pitdacisr

 
 4 310 bytes in section .bss
 2 064 bytes in section .data
   698 bytes in section .text
 
   698 bytes of CODE memory
 6 374 bytes of DATA memory

Errors: none
Warnings: none
